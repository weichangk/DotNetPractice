01 使用Parallel类
02 并行化LINQ查询
03 调整PLINQ查询的参数
04 处理PLINQ查询中的异常
05 管理PLINQ查询中的数据分区
06 为PLINQ查询创建一个自定义的聚合器


任务并行库中有一个名为Parallel的类,其提供了一组API用来实现结构并行。
它仍然是TPL的一部分,我们在本章介绍它的原因是它是从较低的抽象层向较高的抽象层过渡的完美例子。
当使用Parallel类的API时,我们无需提供分割工作的细节。但是我们仍要显式定义如何从分割的结果中得到单个结果。

PLINQ具有最高级抽象。它自动将数据分割为数据块,并且决定是否真的需要并行化查・询,或者使用通常的顺序查询处理更高效。
PLINQ基础设施会将分割任务的执行结果组合到一起。有很多选项可供程序员来优化查询,使用尽可能高的性能获取结果。

在本章中我们将涵盖Parallel类的用法以及很多不同的PLINQ选项,例如让LINQ查,询并行化,设置异常模型及设置PLINQ查询的并行等级,处理查询项的顺序,以及处理PLINQ异常。
我们也会学习如何管理PLINQ查询的数据分割。